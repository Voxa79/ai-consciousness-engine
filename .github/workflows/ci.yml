name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Format check
        run: |
          rustup component add rustfmt || true
          cargo fmt --all -- --check

      - name: Clippy
        run: |
          rustup component add clippy || true
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Build (workspace)
        run: |
          cargo build --workspace --all-features --verbose

  docker-smoke-e2e:
    runs-on: ubuntu-latest
    needs: build-and-test-rust
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images with docker-compose.dev
        run: |
          docker compose -f docker-compose.dev.yml build

      - name: Start stack (detached)
        run: |
          docker compose -f docker-compose.dev.yml up -d

      - name: Wait for api-gateway to be ready
        run: |
          for i in {1..30}; do
            if curl -sf http://localhost:3000/health > /dev/null; then
              echo "api-gateway is up"; exit 0; fi; sleep 2; done; exit 1

      - name: Check /health
        run: |
          curl -sS http://localhost:3000/health | jq .

      - name: Check /openapi.json
        run: |
          curl -sS http://localhost:3000/openapi.json | jq .info

      - name: Stop stack
        if: always()
        run: |
          docker compose -f docker-compose.dev.yml down -v
